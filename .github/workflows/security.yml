name: 🔒 Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # ✅ SENIOR APPROACH: Comprehensive security scanning
  vulnerability-scan:
    name: 🛡️ Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # ✅ NPM AUDIT
      - name: 🔍 NPM Audit (Server)
        working-directory: ./server
        run: |
          npm audit --audit-level=moderate --json > npm-audit-server.json || true
          npm audit --audit-level=moderate

      - name: 🔍 NPM Audit (Client)
        working-directory: ./client
        run: |
          npm audit --audit-level=moderate --json > npm-audit-client.json || true
          npm audit --audit-level=moderate

      # ✅ SNYK SECURITY SCAN
      - name: 🐍 Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json > snyk-report.json
        continue-on-error: true

      # ✅ TRIVY VULNERABILITY SCANNER
      - name: 🔍 Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📊 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  # ✅ SENIOR APPROACH: Secret scanning
  secret-scan:
    name: 🔐 Secret Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔐 TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: 🔍 GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ✅ SENIOR APPROACH: SAST (Static Application Security Testing)
  sast-scan:
    name: 🔍 SAST Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # ✅ SEMGREP STATIC ANALYSIS
      - name: 🔍 Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/javascript
            p/typescript
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  # ✅ SENIOR APPROACH: Docker security scan
  docker-security:
    name: 🐳 Docker Security
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Build Docker image
        run: |
          docker build -t todo-app:latest ./server

      - name: 🔍 Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'todo-app:latest'
          format: 'sarif'
          output: 'docker-trivy-results.sarif'

      - name: 📊 Upload Docker scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'docker-trivy-results.sarif'

  # ✅ SENIOR APPROACH: License compliance
  license-check:
    name: 📄 License Compliance
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: |
          cd server && npm ci
          cd ../client && npm ci

      - name: 📄 License check (Server)
        working-directory: ./server
        run: |
          npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense' --excludePrivatePackages --json > server-licenses.json

      - name: 📄 License check (Client)
        working-directory: ./client
        run: |
          npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense' --excludePrivatePackages --json > client-licenses.json

      - name: 📊 Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            server/server-licenses.json
            client/client-licenses.json

  # ✅ SENIOR APPROACH: Security report
  security-report:
    name: 📊 Security Report
    runs-on: ubuntu-latest
    needs: [vulnerability-scan, secret-scan, sast-scan, license-check]
    if: always()

    steps:
      - name: 📊 Generate Security Report
        run: |
          echo "# 🔒 Security Scan Report" > security-report.md
          echo "" >> security-report.md
          echo "## 📋 Scan Results" >> security-report.md
          echo "" >> security-report.md
          echo "- 🛡️ Vulnerability Scan: ${{ needs.vulnerability-scan.result }}" >> security-report.md
          echo "- 🔐 Secret Scan: ${{ needs.secret-scan.result }}" >> security-report.md
          echo "- 🔍 SAST Scan: ${{ needs.sast-scan.result }}" >> security-report.md
          echo "- 📄 License Check: ${{ needs.license-check.result }}" >> security-report.md
          echo "" >> security-report.md
          echo "## 🚨 Action Required" >> security-report.md
          echo "" >> security-report.md
          if [[ "${{ needs.vulnerability-scan.result }}" == "failure" ]]; then
            echo "- ❌ Fix vulnerabilities found in dependency scan" >> security-report.md
          fi
          if [[ "${{ needs.secret-scan.result }}" == "failure" ]]; then
            echo "- ❌ Remove secrets detected in code" >> security-report.md
          fi
          if [[ "${{ needs.sast-scan.result }}" == "failure" ]]; then
            echo "- ❌ Address security issues found in static analysis" >> security-report.md
          fi
          if [[ "${{ needs.license-check.result }}" == "failure" ]]; then
            echo "- ❌ Review license compliance issues" >> security-report.md
          fi
          echo "" >> security-report.md
          echo "---" >> security-report.md
          echo "*Report generated on $(date)*" >> security-report.md

      - name: 📊 Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md

      - name: 📢 Notify on Security Issues
        if: |
          needs.vulnerability-scan.result == 'failure' ||
          needs.secret-scan.result == 'failure' ||
          needs.sast-scan.result == 'failure'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#security-alerts'
          text: |
            🚨 Security Issues Detected!
            📦 Repository: ${{ github.repository }}
            🔗 Workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            👤 Triggered by: ${{ github.actor }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
